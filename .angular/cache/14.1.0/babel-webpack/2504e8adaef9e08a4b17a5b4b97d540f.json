{"ast":null,"code":"import _classCallCheck from \"C:/Users/Mon2/OneDrive/Desktop/angular-gojs/gojs-angular-basic/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Mon2/OneDrive/Desktop/angular-gojs/gojs-angular-basic/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport var InspectorRowComponent = /*#__PURE__*/(function () {\n  var InspectorRowComponent = /*#__PURE__*/function () {\n    function InspectorRowComponent() {\n      _classCallCheck(this, InspectorRowComponent);\n\n      this.onInputChangeEmitter = new EventEmitter();\n    }\n\n    _createClass(InspectorRowComponent, [{\n      key: \"onInputChange\",\n      value: function onInputChange(e) {\n        // when <input> is changed, emit an Object up, with what property changed, and to what new value\n        this.onInputChangeEmitter.emit({\n          prop: this.id,\n          newVal: e.target.value\n        });\n      }\n    }]);\n\n    return InspectorRowComponent;\n  }();\n\n  InspectorRowComponent.ɵfac = function InspectorRowComponent_Factory(t) {\n    return new (t || InspectorRowComponent)();\n  };\n\n  InspectorRowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InspectorRowComponent,\n    selectors: [[\"app-inspector-row\"]],\n    inputs: {\n      id: \"id\",\n      value: \"value\"\n    },\n    outputs: {\n      onInputChangeEmitter: \"onInputChangeEmitter\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[3, \"ngModel\", \"change\"]],\n    template: function InspectorRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"td\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"td\")(3, \"input\", 0);\n        i0.ɵɵlistener(\"change\", function InspectorRowComponent_Template_input_change_3_listener($event) {\n          return ctx.onInputChange($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.id);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.value);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel]\n  });\n  return InspectorRowComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}