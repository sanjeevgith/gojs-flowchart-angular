import * as go from 'gojs';
import * as ɵngcc0 from '@angular/core';
export declare class DataSyncService {
    /**
     * Sync a node data array with a set of changes
     * @param changes The set of changes to the GoJS model
     * @param nodeData The node data array to merge these changes with
     * @param model Required if you have defined your model.nodeKeyProperty to be something other than 'key'
     * @returns A node data array, merged with the changes
     */
    static syncNodeData(changes: go.IncrementalData, nodeData: Array<go.ObjectData>, model?: go.Model): go.ObjectData[];
    /**
     * Sync a link data array with a set of changes
     * @param changes The set of changes to the GoJS model
     * @param linkData The link data array to merge these changes with
     * @param model Required if you have defined your model.linkKeyProperty to be something other than 'key'
     * @returns A link data array, merged with the changes
     */
    static syncLinkData(changes: go.IncrementalData, linkData: Array<go.ObjectData>, model?: go.GraphLinksModel): go.ObjectData[];
    /**
     * Sync modelData with a set of changes
     * @param changes The set of changes to the GoJS model
     * @param modelData The modelData to merge these changes with
     * @returns A modelData object, merged with the changes
     */
    static syncModelData(changes: go.IncrementalData, modelData: go.ObjectData): go.ObjectData;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DataSyncService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<DataSyncService>;
}

//# sourceMappingURL=data-sync.service.d.ts.map