import { ElementRef, EventEmitter, NgZone } from '@angular/core';
import * as go from 'gojs';
export declare class PaletteComponent {
    zone: NgZone;
    /**
     * Palette initialization function. Returns a go.Palette.
     * Do not initialize model data in this function.
     */
    initPalette: () => go.Palette;
    /** Node data for palette */
    nodeDataArray: Array<go.ObjectData>;
    /** Link data for palette. Optional. */
    linkDataArray: Array<go.ObjectData>;
    /** Model data for palette. Optional. */
    modelData: go.ObjectData;
    /** Palette div class name. Use this name to style your palette in CSS */
    divClassName: string;
    /** Event emitter -- fires when palette model changes. Capture this emitted event in parent component */
    modelChange: EventEmitter<go.IncrementalData>;
    /** The DIV element holding the Palette */
    paletteDiv: ElementRef;
    /** The Palette itself */
    palette: go.Palette | null;
    constructor(zone: NgZone);
    /**
     * Initialize Palette after view init
     */
    ngAfterViewInit(): void;
    /**
     * If a change has occured on an @Input property, merge the app-level changes with GoJS
     */
    ngOnChanges(): void;
    ngOnDestroy(): void;
}
