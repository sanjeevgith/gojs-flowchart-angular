import { ElementRef, EventEmitter, NgZone } from '@angular/core';
import * as go from 'gojs';
import * as ɵngcc0 from '@angular/core';
export declare class DiagramComponent {
    zone: NgZone;
    /**
     * Diagram initialization function. Returns a go.Diagram.
     * Do not initialize model data in this function.
     */
    initDiagram: () => go.Diagram;
    /**  Node data for diagram */
    nodeDataArray: Array<go.ObjectData>;
    /**  Link data for diagram. Optional. */
    linkDataArray: Array<go.ObjectData>;
    /** Model data for diagram. Optional. */
    modelData: go.ObjectData;
    /** Diagram div class name. Use this name to style your diagram in CSS. */
    divClassName: string;
    /** Model changed listener function for diagram */
    modelChangedListener: ((e: go.ChangedEvent) => void) | null;
    /** Whether or not to skip merging app data with GoJS model data (set to true if update is coming from GoJS, false if coming from app-level, usually) */
    skipsDiagramUpdate: boolean;
    /** Event emitter -- fires when diagram model changes. Capture this emitted event in parent component */
    modelChange: EventEmitter<go.IncrementalData>;
    /** The DIV element holding the Diagram */
    diagramDiv: ElementRef;
    /** The Diagram itself */
    diagram: go.Diagram;
    /** An internal flag used to tell ngOnChanges to treat the next sync operation as a Diagram initialization */
    private wasCleared;
    constructor(zone: NgZone);
    /**
     * Initializes diagram / model after view init
     */
    ngAfterViewInit(): void;
    /**
     * If a change has occurred on an @Input property, merge the app-level changes with GoJS
     */
    ngOnChanges(): void;
    /**
     * Clears the diagram of all nodes, links, and model data.
     * Also clears the UndoManager history and clipboard.
     * The next state update will be treated as diagram initialization.
     */
    clear(): void;
    /**
     * Set this.diagram.div to null, removing all event listeners
     */
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DiagramComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DiagramComponent, "gojs-diagram", never, { "linkDataArray": "linkDataArray"; "modelData": "modelData"; "skipsDiagramUpdate": "skipsDiagramUpdate"; "initDiagram": "initDiagram"; "nodeDataArray": "nodeDataArray"; "divClassName": "divClassName"; }, { "modelChange": "modelChange"; }, never, never, false>;
}

//# sourceMappingURL=diagram.component.d.ts.map