{"version":3,"file":"gojs-angular.js","sources":["../../../projects/gojs-angular/src/lib/ng-diagram-helper.ts","../../../projects/gojs-angular/src/lib/diagram.component.ts","../../../projects/gojs-angular/src/lib/palette.component.ts","../../../projects/gojs-angular/src/lib/overview.component.ts","../../../projects/gojs-angular/src/lib/data-sync.service.ts","../../../projects/gojs-angular/src/lib/gojs-angular.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgZone } from \"@angular/core\";\r\nimport { EventEmitter } from \"events\";\r\nimport * as go from \"gojs\";\r\nimport { DiagramComponent } from \"./diagram.component\";\r\n\r\n/**\r\n * An interface to allow methods defined below to accept Palette or Diagram Components,\r\n * without requiring DiagramComponent or PaletteComponent directly in this file\r\n * (that would create a circular dependency)\r\n */\r\nexport interface IDiagramOrPaletteComponent {\r\n  modelChange: EventEmitter<go.IncrementalData>,\r\n  zone: NgZone,\r\n  nodeDataArray: Array<go.ObjectData>,\r\n  linkDataArray: Array<go.ObjectData>,\r\n  modelData: go.ObjectData\r\n}\r\n\r\n/**\r\n * Defines some shared helper static functions, used in Diagram / Palette / Overview Components\r\n */\r\nexport class NgDiagramHelper{\r\n  constructor() {}\r\n\r\n  /**\r\n   * Ensures mousemove event listeners on a diagram's canvas are run outside NgZone.\r\n   * This way, change detection isn't triggered on each mousemove, improving performance.\r\n   *\r\n   * If some state-alteration must happen on a mousemove event inside the diagram, use zone.run() to make sure the event triggers angular change detection.\r\n   * Used by DiagramComponent, PaletteComponent, and OverviewComponent in their ngAfterViewInit lifecycle hooks\r\n   * @param diagram\r\n   * @param zone\r\n   */\r\n  public static makeMouseMoveRunOutsideAngularZone(diagram: go.Diagram, zone: NgZone) {\r\n    diagram.addEventListener = (DOMElement: Element | Window | Document, name: string, listener: any, capture: boolean) => {\r\n      const superAddEventListener = go.Diagram.prototype.addEventListener;\r\n      if (name === 'mousemove') {\r\n        zone.runOutsideAngular(() => superAddEventListener.call(this, DOMElement, name, listener, capture));\r\n      } else {\r\n        zone.run(() => {\r\n          superAddEventListener.call(this, DOMElement, name, listener, capture);\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize a given diagram's model with given node / link / model data\r\n   * @param diagram\r\n   * @param nodeDataArray\r\n   * @param linkDataArray\r\n   * @param modelData\r\n   */\r\n  public static initializeModel(diagram: go.Diagram | go.Palette, nodeDataArray: Array<go.ObjectData>, linkDataArray: Array<go.ObjectData>, modelData: go.ObjectData) {\r\n    diagram.delayInitialization(() => {\r\n      const model = diagram.model;\r\n      model.commit((m: go.Model) => {\r\n        if (modelData) {\r\n          m.assignAllDataProperties(m.modelData, modelData);\r\n        }\r\n        m.mergeNodeDataArray(m.cloneDeep(nodeDataArray));\r\n        if (linkDataArray && m instanceof go.GraphLinksModel) {\r\n          m.mergeLinkDataArray(m.cloneDeep(linkDataArray));\r\n        }\r\n      }, null);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialize the model changed listener for the Palette / Diagram of a given compoennt; ensure it runs inside the component's ngZone.\r\n   * Those changes will be emitted through a the component's modelChange EventEmitter.\r\n   * @param component\r\n   */\r\n  public static initializeModelChangedListener(component: DiagramComponent) {\r\n    var diagram = null;\r\n    if (!(component.hasOwnProperty(\"diagram\")) && !(component.hasOwnProperty(\"palette\"))) return;\r\n    if (component.hasOwnProperty(\"diagram\")) diagram = component[\"diagram\"];\r\n    if (component.hasOwnProperty(\"palette\")) diagram = component[\"palette\"];\r\n    component.modelChangedListener = (e: go.ChangedEvent) => {\r\n      if (e.isTransactionFinished && e.model && !e.model.isReadOnly && component.modelChange) {\r\n        // this must be done within a NgZone.run block, so changes are detected in the parent component\r\n        component.zone.run(() => {\r\n          const dataChanges = e.model!.toIncrementalData(e);\r\n          if (dataChanges !== null) component.modelChange.emit(dataChanges);\r\n        });\r\n      }\r\n    };\r\n    diagram.addModelChangedListener(component.modelChangedListener);\r\n  }\r\n\r\n  /**\r\n   * Merge the app-level node / link / model data of a supplied Diagram|Palette Component with its underlying Diagram|Palette model data\r\n   * @param component\r\n   * @param isInit Whether or not to treat this update as a Diagram initialization\r\n   */\r\n  public static mergeAppDataWithModel(component: IDiagramOrPaletteComponent, isInit?: boolean) {\r\n    var diagram = null;\r\n    if (component.hasOwnProperty(\"diagram\")) diagram = component[\"diagram\"];\r\n    if (component.hasOwnProperty(\"palette\")) diagram = component[\"palette\"];\r\n\r\n    diagram.model.commit((m: go.Model) => {\r\n      if (isInit) diagram.model.modelData = {};\r\n      // update modelData first, in case bindings on nodes / links depend on model data\r\n      diagram.model.assignAllDataProperties(diagram.model.modelData, component.modelData);\r\n      // merge node / link data\r\n      if (isInit) diagram.model.nodeDataArray = [];\r\n      diagram.model.mergeNodeDataArray(component.nodeDataArray);\r\n      if (component.linkDataArray && diagram.model instanceof go.GraphLinksModel) {\r\n        if (isInit) diagram.model.linkDataArray = [];\r\n        diagram.model.mergeLinkDataArray(component.linkDataArray);\r\n      }\r\n    }, isInit ? null : 'update data');\r\n\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\r\nimport * as go from 'gojs';\r\nimport { NgDiagramHelper } from './ng-diagram-helper';\r\n\r\n@Component({\r\n  selector: 'gojs-diagram',\r\n  template: '<div #ngDiagram [className]=divClassName></div>'\r\n})\r\nexport class DiagramComponent {\r\n\r\n  /**\r\n   * Diagram initialization function. Returns a go.Diagram.\r\n   * Do not initialize model data in this function.\r\n   */\r\n  @Input() public initDiagram: () => go.Diagram;\r\n  /**  Node data for diagram */\r\n  @Input() public nodeDataArray: Array<go.ObjectData>;\r\n  /**  Link data for diagram. Optional. */\r\n  @Input() public linkDataArray: Array<go.ObjectData> = null;\r\n  /** Model data for diagram. Optional. */\r\n  @Input() public modelData: go.ObjectData = null;\r\n  /** Diagram div class name. Use this name to style your diagram in CSS. */\r\n  @Input() public divClassName: string;\r\n  /** Model changed listener function for diagram */\r\n  public modelChangedListener: ((e: go.ChangedEvent) => void) | null = null;\r\n  /** Whether or not to skip merging app data with GoJS model data (set to true if update is coming from GoJS, false if coming from app-level, usually) */\r\n  @Input() public skipsDiagramUpdate: boolean = false;\r\n  /** Event emitter -- fires when diagram model changes. Capture this emitted event in parent component */\r\n  @Output() public modelChange: EventEmitter<go.IncrementalData> = new EventEmitter<go.IncrementalData>();\r\n  /** The DIV element holding the Diagram */\r\n  @ViewChild('ngDiagram', { static: true }) public diagramDiv: ElementRef;\r\n  /** The Diagram itself */\r\n  public diagram: go.Diagram = null;\r\n  /** An internal flag used to tell ngOnChanges to treat the next sync operation as a Diagram initialization */\r\n  private wasCleared = false;\r\n\r\n  constructor(public zone: NgZone) {  }\r\n\r\n  /**\r\n   * Initializes diagram / model after view init\r\n   */\r\n  public ngAfterViewInit() {\r\n    if (!this.diagramDiv) {\r\n      throw new Error(\"diagramDiv is not defined\");\r\n    }\r\n    this.diagram = this.initDiagram();\r\n    if (!(this.diagram instanceof go.Diagram)) {\r\n      throw new Error(\"initDiagram function did not return a go.Diagram\");\r\n    }\r\n\r\n    // reduces change detection on mouse moves, boosting performance\r\n    NgDiagramHelper.makeMouseMoveRunOutsideAngularZone(this.diagram, this.zone);\r\n\r\n    // assign the Diagram's div, which (among many other things) will attach a bunch of listeners to the canvas,\r\n    // using the overridden addEventListener function defined in makeMouseMoveRunOutsideAngularZone\r\n    const divRef = this.diagramDiv.nativeElement;\r\n    if (divRef === null) return;\r\n    this.diagram.div = divRef;\r\n\r\n    // initialize the diagram model with the provided node / link / model data\r\n    NgDiagramHelper.initializeModel(this.diagram, this.nodeDataArray, this.linkDataArray, this.modelData);\r\n    // initializer model listener\r\n    NgDiagramHelper.initializeModelChangedListener(this);\r\n  } // end ngAfterViewInit\r\n\r\n  /**\r\n   * If a change has occurred on an @Input property, merge the app-level changes with GoJS\r\n   */\r\n  public ngOnChanges() {\r\n    if (!this.diagram || !this.diagram.model || this.skipsDiagramUpdate) return;\r\n    // if clear was just called, treat this as initial\r\n    if (this.wasCleared) {\r\n      this.diagram.delayInitialization(() => {\r\n        NgDiagramHelper.mergeAppDataWithModel(this, true);\r\n      });\r\n      this.wasCleared = false;\r\n    } else {\r\n      NgDiagramHelper.mergeAppDataWithModel(this);\r\n    }\r\n  } // end ngOnChanges\r\n\r\n  /**\r\n   * Clears the diagram of all nodes, links, and model data.\r\n   * Also clears the UndoManager history and clipboard.\r\n   * The next state update will be treated as diagram initialization.\r\n   */\r\n   public clear(): void {\r\n    const diagram = this.diagram;\r\n    if (diagram !== null) {\r\n      diagram.clear();\r\n      this.wasCleared = true;\r\n    }\r\n  } // end clear function\r\n\r\n  /**\r\n   * Set this.diagram.div to null, removing all event listeners\r\n   */\r\n  public ngOnDestroy() {\r\n    this.diagram.div = null; // removes event listeners\r\n  } // end ngOnDestroy function\r\n\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\r\nimport * as go from 'gojs';\r\nimport { NgDiagramHelper } from './ng-diagram-helper';\r\n@Component({\r\n  selector: 'gojs-palette',\r\n  template: '<div #ngPalette [className]=divClassName></div>'\r\n})\r\nexport class PaletteComponent {\r\n\r\n  /**\r\n   * Palette initialization function. Returns a go.Palette.\r\n   * Do not initialize model data in this function.\r\n   */\r\n  @Input() public initPalette: () => go.Palette;\r\n  /** Node data for palette */\r\n  @Input() public nodeDataArray: Array<go.ObjectData>;\r\n  /** Link data for palette. Optional. */\r\n  @Input() public linkDataArray: Array<go.ObjectData> = null;\r\n  /** Model data for palette. Optional. */\r\n  @Input() public modelData: go.ObjectData = null;\r\n  /** Palette div class name. Use this name to style your palette in CSS */\r\n  @Input() public divClassName: string;\r\n\r\n  /** Event emitter -- fires when palette model changes. Capture this emitted event in parent component */\r\n  @Output() public modelChange: EventEmitter<go.IncrementalData> = new EventEmitter<go.IncrementalData>();\r\n  /** The DIV element holding the Palette */\r\n  @ViewChild('ngPalette', { static: true }) public paletteDiv: ElementRef;\r\n\r\n  /** The Palette itself */\r\n  public palette: go.Palette | null = null;\r\n\r\n  constructor(public zone: NgZone) {  } \r\n\r\n  /**\r\n   * Initialize Palette after view init\r\n   */\r\n  public ngAfterViewInit() {\r\n    if (!this.paletteDiv) {\r\n      throw new Error(\"paletteDiv is not defined\");\r\n    }\r\n    this.palette = this.initPalette();\r\n    if (!(this.palette instanceof go.Palette)) {\r\n      throw new Error(\"initPalette function did not return a go.Palette\");\r\n    }\r\n\r\n    // reduces change detection on mouse moves, boosting performance\r\n    NgDiagramHelper.makeMouseMoveRunOutsideAngularZone(this.palette, this.zone);\r\n\r\n    // assign the Palette's div, which (among many other things) will attach a bunch of listeners to the canvas,\r\n    // using the overridden addEventListener function above\r\n    const divRef = this.paletteDiv.nativeElement;\r\n    if (divRef == null) return;\r\n    this.palette.div = divRef;\r\n\r\n    // initialize palette model\r\n    NgDiagramHelper.initializeModel(this.palette, this.nodeDataArray, this.linkDataArray, this.modelData);\r\n  }\r\n\r\n  /**\r\n   * If a change has occured on an @Input property, merge the app-level changes with GoJS\r\n   */\r\n  public ngOnChanges() {\r\n    if (!this.palette || !this.palette.model) return;\r\n    NgDiagramHelper.mergeAppDataWithModel(this);\r\n  } // end ngOnChanges \r\n  \r\n\r\n  public ngOnDestroy() {\r\n    this.palette.div = null; // removes event listeners\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, Input, NgZone, SimpleChanges, ViewChild } from '@angular/core';\r\nimport * as go from 'gojs';\r\nimport { NgDiagramHelper } from \"./ng-diagram-helper\";\r\n\r\n@Component({\r\n  selector: 'gojs-overview',\r\n  template: '<div #ngOverview [className]=divClassName></div>'\r\n})\r\nexport class OverviewComponent {\r\n\r\n  /** The function used to initialize and return the Overview */ \r\n  @Input() public initOverview: () => go.Overview;\r\n  /** The div class name that holds the Overview. Use this name to style your Overview in CSS. */\r\n  @Input() public divClassName: string;\r\n  /** The Diagram to observe with the Overview */\r\n  @Input() public observedDiagram: go.Diagram = null;\r\n\r\n  @ViewChild('ngOverview', { static: true }) public overviewDiv: ElementRef;\r\n\r\n  /** The Overview itself  */\r\n  public overview: go.Overview | null = null;\r\n\r\n  constructor(public zone: NgZone) { }\r\n\r\n  /**\r\n   * Initialize the overview\r\n   */\r\n  public ngAfterViewInit() {\r\n    if (!this.overviewDiv) {\r\n      throw new Error(\"overviewDiv is not defined\");\r\n    }\r\n    if (this.initOverview) {\r\n      this.overview = this.initOverview();\r\n      if (!(this.overview instanceof go.Overview)) {\r\n        throw new Error(\"initOverview function did not return a go.Overview\");\r\n      }\r\n    } else {\r\n      this.overview = new go.Overview();\r\n      this.overview.contentAlignment = go.Spot.Center;\r\n    }\r\n\r\n    // reduces change detection on mouse moves, boosting performance\r\n    NgDiagramHelper.makeMouseMoveRunOutsideAngularZone(this.overview, this.zone);\r\n\r\n    this.overview.div = this.overviewDiv.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Only update when the observed diagram changes\r\n   * @param changes\r\n   */\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.overview) return;\r\n    if (changes && changes.observedDiagram && changes.observedDiagram.currentValue !== changes.observedDiagram.previousValue) {\r\n      this.overview.observed = changes.observedDiagram.currentValue;\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.overview.div = null; // removes event listeners\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as go from 'gojs';\r\nimport produce from \"immer\";\r\n\r\n@Injectable()\r\nexport class DataSyncService {\r\n\r\n  /**\r\n   * Sync a node data array with a set of changes\r\n   * @param changes The set of changes to the GoJS model\r\n   * @param nodeData The node data array to merge these changes with\r\n   * @param model Required if you have defined your model.nodeKeyProperty to be something other than 'key'\r\n   * @returns A node data array, merged with the changes\r\n   */\r\n  public static syncNodeData(changes: go.IncrementalData, nodeData: Array<go.ObjectData>, model?: go.Model) {\r\n    if (!changes) return nodeData;\r\n    if (!changes.modifiedNodeData && !changes.insertedNodeKeys && !changes.removedNodeKeys) return nodeData;\r\n\r\n    // maintain a map of modified nodes for fast lookup during insertion\r\n    const modifiedNodesMap = new go.Map<go.Key, go.ObjectData>();\r\n\r\n    // nodeData is immutable, modify it using the immer package's \"produce\" function (creates new array)\r\n    var newNodeDataArray = produce(nodeData, (draft) => {\r\n      // account for modified node data\r\n      if (changes.modifiedNodeData) {\r\n        changes.modifiedNodeData.forEach((nd: go.ObjectData) => {\r\n          // Get the value of the node key property checking wether is a function or a string\r\n          const key = model ? model.getKeyForNodeData(nd) : nd['key'];\r\n          modifiedNodesMap.set(key, nd);\r\n          for (let i = 0; i < nodeData.length; i++) {\r\n            const ndEntry = nodeData[i];\r\n            const keyNdEntry = model ? model.getKeyForNodeData(ndEntry) : ndEntry['key'];\r\n            if (keyNdEntry === key) {\r\n              draft[i] = nd;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // account for inserted node data\r\n      if (changes.insertedNodeKeys) {\r\n        changes.insertedNodeKeys.forEach((key: go.Key) => {\r\n          const nd = modifiedNodesMap.get(key);\r\n          if (nd) {\r\n            draft.push(nd);\r\n          }\r\n        });\r\n      }\r\n\r\n      // account for removed node data\r\n      if (changes.removedNodeKeys) {\r\n        return draft.filter((nd: go.ObjectData) => {\r\n          const key = model ? model.getKeyForNodeData(nd) : nd['key'];\r\n          if (changes.removedNodeKeys.includes(key)) {\r\n            return false;\r\n          } \r\n          return true;\r\n        });\r\n      }\r\n    });\r\n\r\n    return newNodeDataArray;\r\n  }\r\n\r\n  /**\r\n   * Sync a link data array with a set of changes\r\n   * @param changes The set of changes to the GoJS model\r\n   * @param linkData The link data array to merge these changes with\r\n   * @param model Required if you have defined your model.linkKeyProperty to be something other than 'key'\r\n   * @returns A link data array, merged with the changes\r\n   */\r\n  public static syncLinkData(changes: go.IncrementalData, linkData: Array<go.ObjectData>, model?: go.GraphLinksModel) {\r\n    if (!changes) return linkData;\r\n    if (!changes.modifiedLinkData && !changes.insertedLinkKeys && !changes.removedLinkKeys) return linkData;\r\n\r\n    // maintain a map of modified nodes for fast lookup during insertion\r\n    const modifiedLinksMap = new go.Map<go.Key, go.ObjectData>();\r\n\r\n    // linkData is immutable, modify it using the immer package's \"produce\" function (creates new array)\r\n    linkData = produce(linkData, draft => {\r\n      // account for modified link data\r\n      if (changes.modifiedLinkData) {\r\n        changes.modifiedLinkData.forEach((ld: go.ObjectData) => {\r\n          // Get the value of the link key\r\n          const key = model ? model.getKeyForLinkData(ld) : ld['key'];\r\n          modifiedLinksMap.set(key, ld);\r\n\r\n          for (let i = 0; i < linkData.length; i++) {\r\n            const ldEntry = linkData[i];\r\n            const keyLdEntry = model ? model.getKeyForLinkData(ldEntry) : ldEntry['key'];\r\n            if (keyLdEntry === key) {\r\n              draft[i] = ld;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // account for inserted link data\r\n      if (changes.insertedLinkKeys) {\r\n        changes.insertedLinkKeys.forEach((key: go.Key) => {\r\n          const nd = modifiedLinksMap.get(key);\r\n          if (nd) {\r\n            draft.push(nd);\r\n          }\r\n        });\r\n      }\r\n\r\n      // account for removed link data\r\n      if (changes.removedLinkKeys) {\r\n        return draft.filter((ld: go.ObjectData) => {\r\n          const key = model ? model.getKeyForLinkData(ld) : ld['key'];\r\n          if (changes.removedLinkKeys.includes(key)) {\r\n            return false;\r\n          } return true;\r\n        });\r\n      }\r\n    });\r\n\r\n    return linkData;\r\n  }\r\n\r\n  /**\r\n   * Sync modelData with a set of changes\r\n   * @param changes The set of changes to the GoJS model\r\n   * @param modelData The modelData to merge these changes with\r\n   * @returns A modelData object, merged with the changes\r\n   */\r\n  public static syncModelData(changes: go.IncrementalData, modelData: go.ObjectData) {\r\n    if (!changes) return modelData;\r\n    if (!changes.modelData) return modelData;\r\n    if (changes.modelData) {\r\n      return changes.modelData;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DataSyncService } from './data-sync.service';\r\nimport { DiagramComponent } from './diagram.component';\r\nimport { OverviewComponent } from './overview.component';\r\nimport { PaletteComponent } from './palette.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DiagramComponent,\r\n    OverviewComponent,\r\n    PaletteComponent\r\n  ],\r\n  imports: [\r\n  ],\r\n  providers: [\r\n    DataSyncService\r\n  ],\r\n  exports: [\r\n    DiagramComponent,\r\n    OverviewComponent,\r\n    PaletteComponent\r\n  ]\r\n})\r\nexport class GojsAngularModule { }\r\n"]}